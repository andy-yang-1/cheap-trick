b0 = sch.get_block(name="Y", func_name="mm")
b1 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
b2 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared")
b3 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared")
b4 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="local")
b5 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="local")
b6 = sch.cache_read(block=b3, read_buffer_index=0, storage_scope="local")
b7 = sch.cache_read(block=b2, read_buffer_index=0, storage_scope="local")
sch.transform_layout(block=b3, buffer=("write", 0), index_map=lambda i, j: (j, i, ))
l8, l9, l10 = sch.get_loops(block=b0)
l11, l12, l13 = sch.split(loop=l8, factors=[8, 16, 8], preserve_unit_iters=True)
l14, l15, l16 = sch.split(loop=l9, factors=[8, 16, 8], preserve_unit_iters=True)
l17, l18 = sch.split(loop=l10, factors=[128, 8], preserve_unit_iters=True)
sch.bind(loop=l11, thread_axis="blockIdx.x")
sch.bind(loop=l14, thread_axis="blockIdx.y")
sch.bind(loop=l12, thread_axis="threadIdx.x")
sch.bind(loop=l15, thread_axis="threadIdx.y")
sch.reorder(l14, l11, l15, l12, l17, l18, l13, l16)
l19, l20, l21, l22, l23, l24, l25, l26 = sch.get_loops(block=b0)
b27 = sch.decompose_reduction(block=b0, loop=l23)
sch.compute_at(block=b4, loop=l24, preserve_unit_loops=False)
sch.compute_at(block=b5, loop=l24, preserve_unit_loops=False)
sch.compute_at(block=b3, loop=l23, preserve_unit_loops=False)
sch.compute_at(block=b2, loop=l23, preserve_unit_loops=False)
sch.reverse_compute_at(block=b1, loop=l22, preserve_unit_loops=False)
sch.compute_at(block=b6, loop=l23, preserve_unit_loops=False)
sch.compute_at(block=b7, loop=l23, preserve_unit_loops=False)
l28, l29, l30, l31, l32, l33, l34 = sch.get_loops(block=b3)
l35, l36, l37, l38, l39, l40, l41 = sch.get_loops(block=b3)
l42 = sch.fuse(l33, l41, preserve_unit_iters=True)
l43, l44, l45 = sch.split(loop=l42, factors=[16, 16, 4], preserve_unit_iters=True)
sch.bind(loop=l43, thread_axis="threadIdx.y")
sch.bind(loop=l44, thread_axis="threadIdx.x")
l46, l47, l48, l49, l50, l51, l52 = sch.get_loops(block=b2)
l53, l54, l55, l56, l57, l58, l59 = sch.get_loops(block=b2)
l60 = sch.fuse(l51, l59, preserve_unit_iters=True)
l61, l62, l63 = sch.split(loop=l60, factors=[16, 16, 4], preserve_unit_iters=True)
sch.bind(loop=l61, thread_axis="threadIdx.y")
sch.bind(loop=l62, thread_axis="threadIdx.x")
l64, l65, l66, l67, l68, l69, l70 = sch.get_loops(block=b6)
l71, l72, l73, l74, l75, l76, l77 = sch.get_loops(block=b6)
l78 = sch.fuse(l69, l77, preserve_unit_iters=True)
l79, l80, l81 = sch.split(loop=l78, factors=[16, 16, 4], preserve_unit_iters=True)
sch.bind(loop=l79, thread_axis="threadIdx.y")
sch.bind(loop=l80, thread_axis="threadIdx.x")
l82, l83, l84, l85, l86, l87, l88 = sch.get_loops(block=b7)
l89, l90, l91, l92, l93, l94, l95 = sch.get_loops(block=b7)
l96 = sch.fuse(l87, l95, preserve_unit_iters=True)
l97, l98, l99 = sch.split(loop=l96, factors=[16, 16, 4], preserve_unit_iters=True)
sch.bind(loop=l97, thread_axis="threadIdx.y")
sch.bind(loop=l98, thread_axis="threadIdx.x")
l100, l101, l102, l103, l104, l105, l106 = sch.get_loops(block=b5)
l107, l108 = sch.split(loop=l106, factors=[2, 4], preserve_unit_iters=True)
l109, l110, l111, l112, l113, l114, l115 = sch.get_loops(block=b4)
l116, l117 = sch.split(loop=l115, factors=[2, 4], preserve_unit_iters=True)
sch.transform_layout(block=b4, buffer=("read", 0), index_map=lambda i, j: (i, ((((floordiv(j, 128)*128) + (floordiv(floormod(j, 128), 8)*4)) + (floordiv(floormod(j, 8), 4)*64)) + floormod(j, 4)), ))
sch.transform_layout(block=b5, buffer=("read", 0), index_map=lambda j, i: (j, ((((floordiv(i, 128)*128) + (floordiv(floormod(i, 128), 8)*4)) + (floordiv(floormod(i, 8), 4)*64)) + floormod(i, 4)), ))
l118, l119, l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
sch.vectorize(loop=l125)
l126, l127, l128, l129, l130, l131, l132, l133 = sch.get_loops(block=b2)
sch.vectorize(loop=l133)
l134, l135, l136, l137, l138, l139, l140, l141 = sch.get_loops(block=b5)
sch.vectorize(loop=l141)
l142, l143, l144, l145, l146, l147, l148, l149 = sch.get_loops(block=b4)
sch.vectorize(loop=l149)
l150, l151, l152, l153, l154, l155, l156, l157 = sch.get_loops(block=b6)
sch.vectorize(loop=l157)
l158, l159, l160, l161, l162, l163, l164, l165 = sch.get_loops(block=b7)
sch.vectorize(loop=l165)
b166 = sch.get_block(name="Y_local", func_name="mm")
l167, l168, l169, l170, l171, l172 = sch.get_loops(block=b166)
sch.vectorize(loop=l172)
l173, l174, l175, l176, l177, l178, l179, l180 = sch.get_loops(block=b5)
l181, l182, l183, l184, l185, l186, l187, l188 = sch.get_loops(block=b5)
l189, l190, l191, l192, l193, l194, l195, l196 = sch.get_loops(block=b5)
sch.unroll(loop=l180)
sch.unroll(loop=l187)
sch.unroll(loop=l194)
l197, l198, l199, l200, l201, l202, l203, l204 = sch.get_loops(block=b4)
l205, l206, l207, l208, l209, l210, l211, l212 = sch.get_loops(block=b4)
sch.unroll(loop=l204)
sch.unroll(loop=l211)
l213, l214, l215, l216, l217, l218, l219, l220 = sch.get_loops(block=b3)
sch.vectorize(loop=l220)
l221, l222, l223, l224, l225, l226, l227, l228 = sch.get_loops(block=b2)
sch.vectorize(loop=l228)
l229, l230, l231, l232, l233, l234, l235, l236 = sch.get_loops(block=b5)
sch.vectorize(loop=l236)
l237, l238, l239, l240, l241, l242, l243, l244 = sch.get_loops(block=b4)
sch.vectorize(loop=l244)
l245, l246, l247, l248, l249, l250, l251, l252 = sch.get_loops(block=b6)
sch.vectorize(loop=l252)
l253, l254, l255, l256, l257, l258, l259, l260 = sch.get_loops(block=b7)
sch.vectorize(loop=l260)
b261 = sch.get_block(name="Y_local", func_name="mm")
l262, l263, l264, l265, l266, l267 = sch.get_loops(block=b261)
sch.vectorize(loop=l267)
sch.annotate(block_or_loop=b3, ann_key="double_buffer_scope", ann_val=0)
sch.annotate(block_or_loop=b2, ann_key="double_buffer_scope", ann_val=0)
l268, l269, l270, l271, l272, l273, l274, l275 = sch.get_loops(block=b3)
sch.annotate(block_or_loop=l272, ann_key="software_pipeline_stage", ann_val=[0, 0, 0, 0, 1])
sch.annotate(block_or_loop=l272, ann_key="software_pipeline_order", ann_val=[0, 3, 1, 4, 2])